from downloadgcj import *
import sorting
from download_input import *
import os
import multiprocessing as mp
import time
import urllib2
from datetime import datetime
import sys

# import own modules from diffrent directory

gcj_path = os.path.join(os.getcwd(), '../')
sys.path.insert(0, gcj_path)
from constants import *
from finding_regexes import *
from stuff_module import *


def retrive_problem_ids(url):
	page = urllib2.urlopen(url).read()
	#print "PAGE RESPONSE " + page
	return filter_information('\"id\":\s+\"\d+\"',':',page)

def build_base_url(contest_id):
   return get_BASE()+contest_id+'/scoreboard'

def retrive_token(contest_id):
	page = urllib2.urlopen(get_BASE()+contest_id+'/dashboard/do?cmd=GetInitialValues').read()
	token = filter_information('\"\w*=\"',None,page)[0]
	#print "TOKEN " + token
	return token

# removes outputfiles and similar files created by solutions
clean_home_dir()







download_input_mp()
download_solutions_mp()


print 'Starting to sort all zip files...'
def sort_all_solutions():
	for problem_id in get_PROBLEM_IDS(gcj_path):
		print 'Sorting contest ' + problem_id
		sorting.sort_files(problem_id)
	
